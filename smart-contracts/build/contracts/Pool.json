{
  "contractName": "Pool",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "fromChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenId",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Data.Token[]",
              "name": "tokens",
              "type": "tuple[]"
            },
            {
              "internalType": "enum Data.PayMaster",
              "name": "payMaster",
              "type": "uint8"
            }
          ],
          "internalType": "struct Data.IncomingMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Data.Token[]\",\"name\":\"tokens\",\"type\":\"tuple[]\"},{\"internalType\":\"enum Data.PayMaster\",\"name\":\"payMaster\",\"type\":\"uint8\"}],\"internalType\":\"struct Data.IncomingMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/pool/pool.sol\":\"Pool\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"project:/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0x7ffa4306c10f4f2f44d55963cb03e23a0ea6d57bcf3d312f3911853a6ce2aaf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b94ed7efc2763e7c198c92976395718ae0ca3bd66fb86668a8a2b43fb21decd6\",\"dweb:/ipfs/QmfP74Tdk9J8oVDqjfmpfKegvvJyQpKDycW1Mik2Xx8qhf\"]},\"project:/contracts/libraries/Data.sol\":{\"keccak256\":\"0xa0e8f82cce57f5cf3f132aa5cdef1f321bf80a2ff426d34cdde7f377873689bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f59c34d24a30d5784f9ca3c8c93726e724dc7332dda0a759f2d9a4bd671f861\",\"dweb:/ipfs/QmXQ6zNZBHAdwLL7wWfKotKBdfVuviwqb4gN1FLQDW5oEN\"]},\"project:/contracts/pool/pool.sol\":{\"keccak256\":\"0x75769dbedbb9cb033d8d120d647bd9edce54298938cebb0bea76ef41a8e08fc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a86ae59312aff748a1448f722caed5d68703ea10595fd15a52e61fef9ccb1e\",\"dweb:/ipfs/Qmev5upXdMSBxp28DEBjxQNYmvFRCReSedHU82KbtVF3af\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport {Data} from \"../libraries/Data.sol\";\r\nimport {IPool} from \"../interfaces/IPool.sol\";\r\n\r\nimport {Context} from \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\nabstract contract Pool is IPool, Context, Ownable {\r\n    constructor() Ownable() {}\r\n\r\n    function withdrawTo(\r\n        address to,\r\n        Data.IncomingMessage calldata message\r\n    ) external virtual override onlyOwner {\r\n        _withdrawTo(to, message);\r\n    }\r\n\r\n    function _withdrawTo(\r\n        address to,\r\n        Data.IncomingMessage calldata message\r\n    ) internal virtual;\r\n\r\n    error InvalidRouter(address router);\r\n}\r\n",
  "sourcePath": "C:\\Users\\DELL\\Documents\\metreon.hack.areon\\smart-contracts\\contracts\\pool\\pool.sol",
  "ast": {
    "absolutePath": "project:/contracts/pool/pool.sol",
    "exportedSymbols": {
      "Context": [
        832
      ],
      "Data": [
        1960
      ],
      "IPool": [
        1906
      ],
      "Ownable": [
        112
      ],
      "Pool": [
        2662
      ]
    },
    "id": 2663,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2612,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:21"
      },
      {
        "absolutePath": "project:/contracts/libraries/Data.sol",
        "file": "../libraries/Data.sol",
        "id": 2614,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2663,
        "sourceUnit": 1961,
        "src": "61:43:21",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2613,
              "name": "Data",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1960,
              "src": "69:4:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IPool.sol",
        "file": "../interfaces/IPool.sol",
        "id": 2616,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2663,
        "sourceUnit": 1907,
        "src": "106:46:21",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2615,
              "name": "IPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1906,
              "src": "114:5:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 2618,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2663,
        "sourceUnit": 833,
        "src": "156:66:21",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2617,
              "name": "Context",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 832,
              "src": "164:7:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2620,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2663,
        "sourceUnit": 113,
        "src": "224:67:21",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2619,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 112,
              "src": "232:7:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2621,
              "name": "IPool",
              "nameLocations": [
                "321:5:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1906,
              "src": "321:5:21"
            },
            "id": 2622,
            "nodeType": "InheritanceSpecifier",
            "src": "321:5:21"
          },
          {
            "baseName": {
              "id": 2623,
              "name": "Context",
              "nameLocations": [
                "328:7:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 832,
              "src": "328:7:21"
            },
            "id": 2624,
            "nodeType": "InheritanceSpecifier",
            "src": "328:7:21"
          },
          {
            "baseName": {
              "id": 2625,
              "name": "Ownable",
              "nameLocations": [
                "337:7:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "337:7:21"
            },
            "id": 2626,
            "nodeType": "InheritanceSpecifier",
            "src": "337:7:21"
          }
        ],
        "canonicalName": "Pool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 2662,
        "linearizedBaseContracts": [
          2662,
          112,
          832,
          1906
        ],
        "name": "Pool",
        "nameLocation": "313:4:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2631,
              "nodeType": "Block",
              "src": "376:2:21",
              "statements": []
            },
            "id": 2632,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 2629,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2628,
                  "name": "Ownable",
                  "nameLocations": [
                    "366:7:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112,
                  "src": "366:7:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "366:9:21"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "363:2:21"
            },
            "returnParameters": {
              "id": 2630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "376:0:21"
            },
            "scope": 2662,
            "src": "352:26:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1905
            ],
            "body": {
              "id": 2648,
              "nodeType": "Block",
              "src": "518:43:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2644,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2634,
                        "src": "541:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2645,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2637,
                        "src": "545:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncomingMessage_$1945_calldata_ptr",
                          "typeString": "struct Data.IncomingMessage calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_IncomingMessage_$1945_calldata_ptr",
                          "typeString": "struct Data.IncomingMessage calldata"
                        }
                      ],
                      "id": 2643,
                      "name": "_withdrawTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2657,
                      "src": "529:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_IncomingMessage_$1945_calldata_ptr_$returns$__$",
                        "typeString": "function (address,struct Data.IncomingMessage calldata)"
                      }
                    },
                    "id": 2646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "529:24:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2647,
                  "nodeType": "ExpressionStatement",
                  "src": "529:24:21"
                }
              ]
            },
            "functionSelector": "25ed576d",
            "id": 2649,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2641,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2640,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "508:9:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "508:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "508:9:21"
              }
            ],
            "name": "withdrawTo",
            "nameLocation": "395:10:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2639,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "499:8:21"
            },
            "parameters": {
              "id": 2638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2634,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "424:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2649,
                  "src": "416:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2637,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "467:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2649,
                  "src": "437:37:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_IncomingMessage_$1945_calldata_ptr",
                    "typeString": "struct Data.IncomingMessage"
                  },
                  "typeName": {
                    "id": 2636,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2635,
                      "name": "Data.IncomingMessage",
                      "nameLocations": [
                        "437:4:21",
                        "442:15:21"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1945,
                      "src": "437:20:21"
                    },
                    "referencedDeclaration": 1945,
                    "src": "437:20:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IncomingMessage_$1945_storage_ptr",
                      "typeString": "struct Data.IncomingMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "405:76:21"
            },
            "returnParameters": {
              "id": 2642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "518:0:21"
            },
            "scope": 2662,
            "src": "386:175:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 2657,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawTo",
            "nameLocation": "578:11:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2651,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "608:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2657,
                  "src": "600:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "600:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2654,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "651:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2657,
                  "src": "621:37:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_IncomingMessage_$1945_calldata_ptr",
                    "typeString": "struct Data.IncomingMessage"
                  },
                  "typeName": {
                    "id": 2653,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2652,
                      "name": "Data.IncomingMessage",
                      "nameLocations": [
                        "621:4:21",
                        "626:15:21"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1945,
                      "src": "621:20:21"
                    },
                    "referencedDeclaration": 1945,
                    "src": "621:20:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IncomingMessage_$1945_storage_ptr",
                      "typeString": "struct Data.IncomingMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "589:76:21"
            },
            "returnParameters": {
              "id": 2656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:0:21"
            },
            "scope": 2662,
            "src": "569:114:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "errorSelector": "d7f73334",
            "id": 2661,
            "name": "InvalidRouter",
            "nameLocation": "697:13:21",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2659,
                  "mutability": "mutable",
                  "name": "router",
                  "nameLocation": "719:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2661,
                  "src": "711:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:16:21"
            },
            "src": "691:36:21"
          }
        ],
        "scope": 2663,
        "src": "295:435:21",
        "usedErrors": [
          2661
        ]
      }
    ],
    "src": "33:699:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2024-01-20T08:14:39.282Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}