{
  "contractName": "TokenPool",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenId",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Data.Token[]",
          "name": "tokens",
          "type": "tuple[]"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Data.Token[]\",\"name\":\"tokens\",\"type\":\"tuple[]\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/pool/TokenPool.sol\":\"TokenPool\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"project:/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xf380e9ee1b0e609a2c6aa38b73424dc664a4f337479b61be311c8d962fe206e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c401fd6007340c796066f0cdbfcab7a85b922db3c5df52df45c8f82624ee303\",\"dweb:/ipfs/QmYJmcCRsDm5XU4ogAdo8ydLiMotsAFNi3swgkLKeTmstq\"]},\"project:/contracts/libraries/Data.sol\":{\"keccak256\":\"0xa0e8f82cce57f5cf3f132aa5cdef1f321bf80a2ff426d34cdde7f377873689bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f59c34d24a30d5784f9ca3c8c93726e724dc7332dda0a759f2d9a4bd671f861\",\"dweb:/ipfs/QmXQ6zNZBHAdwLL7wWfKotKBdfVuviwqb4gN1FLQDW5oEN\"]},\"project:/contracts/pool/TokenPool.sol\":{\"keccak256\":\"0xd457c7448b99d662dd95383cf4a330107a96639432d9ecaf6e1de87fab445210\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0f4e277a02e15bc64f076bea9a9cd419b327245f721e99e4b0fd68b1a8fda68\",\"dweb:/ipfs/QmVQ1Z8foAyMQ1ronriFAaJxiNnK9vZV3tw9YiRUKXDyc1\"]},\"project:/contracts/pool/pool.sol\":{\"keccak256\":\"0x852e442ac3c8ebde398b9e268f4a136de3d24a9b36bf6387dcec96c2a65119ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9476d4dba5d105cfe8c72b35e3fa9359b040ff7ba23fb2c65dec2e0fced3f20\",\"dweb:/ipfs/QmdQi7JAGkWiUJa4JK37HGQHqmnn423zzzKWFaKHiVnHP1\"]}},\"version\":1}",
  "bytecode": "0x60808060405234610093573315610064576000805433600160a060020a0319821681178355604051929091600160a060020a0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361048690816100998239f35b807f1e4fbdf7000000000000000000000000000000000000000000000000000000006024925260006004820152fd5b600080fdfe6080604081815260048036101561001557600080fd5b6000927c010000000000000000000000000000000000000000000000000000000084350490816337a0190f1461019957508063715018a6146101445780638da5cb5b1461011a5763f2fde38b1461006b57600080fd5b34610116576020366003190112610116576100846103b6565b9061008d61040c565b600160a060020a038092169283156100e7575050825473ffffffffffffffffffffffffffffffffffffffff19811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908460249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8280fd5b505034610140578160031936011261014057600160a060020a0360209254169051908152f35b5080fd5b833461019657806003193601126101965761015d61040c565b80600160a060020a038154811981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b91849150346101405783600319360112610140576101b56103b6565b60249467ffffffffffffffff8635818111610323573660238201121561032357808501358281116103a1576020926101f184808402018a6103d1565b8189528985858b0193028401019236841161039d578a01915b838310610340575050505061021d61040c565b845b865181101561033c578486838084028a01015184600160a060020a0391888d848351169081156000146102a8575050508394509183929183920151908290821561029e575b8a1690f115610294575b600019811461027f5760010161021f565b878660118760e060020a634e487b7102835252fd5b82513d87823e3d90fd5b6108fc9150610264565b846044959793940151908b5198899788967fa9059cbb00000000000000000000000000000000000000000000000000000000885216908601528401525af18015610332576102f7575b5061026e565b8281813d831161032b575b61030c81836103d1565b8101031261032757518015150361032357886102f1565b8580fd5b8680fd5b503d610302565b84513d89823e3d90fd5b8580f35b858336031261039d578551868101818110848211176103885787528335600160a060020a03811681036103845781528386013586820152815291850191840161020a565b8a80fd5b8c8b60418c60e060020a634e487b7102835252fd5b8880fd5b888760418860e060020a634e487b7102835252fd5b60043590600160a060020a03821682036103cc57565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176103f357604052565b60e060020a634e487b7102600052604160045260246000fd5b600160a060020a0360005416330361042057565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fdfea264697066735822122000d85c3463b0f28bb82beba77d317a170eac9bf775b04548e3bcb10dcd91e13a64736f6c63430008140033",
  "deployedBytecode": "0x6080604081815260048036101561001557600080fd5b6000927c010000000000000000000000000000000000000000000000000000000084350490816337a0190f1461019957508063715018a6146101445780638da5cb5b1461011a5763f2fde38b1461006b57600080fd5b34610116576020366003190112610116576100846103b6565b9061008d61040c565b600160a060020a038092169283156100e7575050825473ffffffffffffffffffffffffffffffffffffffff19811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908460249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8280fd5b505034610140578160031936011261014057600160a060020a0360209254169051908152f35b5080fd5b833461019657806003193601126101965761015d61040c565b80600160a060020a038154811981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b91849150346101405783600319360112610140576101b56103b6565b60249467ffffffffffffffff8635818111610323573660238201121561032357808501358281116103a1576020926101f184808402018a6103d1565b8189528985858b0193028401019236841161039d578a01915b838310610340575050505061021d61040c565b845b865181101561033c578486838084028a01015184600160a060020a0391888d848351169081156000146102a8575050508394509183929183920151908290821561029e575b8a1690f115610294575b600019811461027f5760010161021f565b878660118760e060020a634e487b7102835252fd5b82513d87823e3d90fd5b6108fc9150610264565b846044959793940151908b5198899788967fa9059cbb00000000000000000000000000000000000000000000000000000000885216908601528401525af18015610332576102f7575b5061026e565b8281813d831161032b575b61030c81836103d1565b8101031261032757518015150361032357886102f1565b8580fd5b8680fd5b503d610302565b84513d89823e3d90fd5b8580f35b858336031261039d578551868101818110848211176103885787528335600160a060020a03811681036103845781528386013586820152815291850191840161020a565b8a80fd5b8c8b60418c60e060020a634e487b7102835252fd5b8880fd5b888760418860e060020a634e487b7102835252fd5b60043590600160a060020a03821682036103cc57565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176103f357604052565b60e060020a634e487b7102600052604160045260246000fd5b600160a060020a0360005416330361042057565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fdfea264697066735822122000d85c3463b0f28bb82beba77d317a170eac9bf775b04548e3bcb10dcd91e13a64736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "216:574:18:-:0;;;;;;;735:10:2;1273:26:0;1269:95;;1297:1;216:574:18;;735:10:2;-1:-1:-1;;;;;;216:574:18;;;;;;;;;735:10:2;;-1:-1:-1;;;;;216:574:18;;3052:40:0;;1297:1;3052:40;216:574:18;;;;;;;1269:95:0;1322:31;;216:574:18;1322:31:0;;1297:1;1322:31;;;216:574:18;1322:31:0;216:574:18;;;",
  "deployedSourceMap": "216:574:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;216:574:18;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;216:574:18;;;2627:22:0;;;2623:91;;-1:-1:-1;;216:574:18;;-1:-1:-1;;216:574:18;;;;;;;3052:40:0;216:574:18;;3052:40:0;216:574:18;;2623:91:0;216:574:18;;;;;2672:31:0;;;;;;216:574:18;2672:31:0;216:574:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;216:574:18;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;216:574:18;-1:-1:-1;;;;;216:574:18;;;;;;;;;3052:40:0;;;;216:574:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;;;;;:::i;:::-;401:17:18;443:7;216:574;;420:21;;;;;216:574;;;;;;;;;493:13;216:574;-1:-1:-1;;;;;216:574:18;;;;;;;527:27;;;523:246;527:27;;;596:12;;;;;;;;;;;;;216:574;575:34;;;;;;;523:246;216:574;;575:34;;;;;523:246;-1:-1:-1;;216:574:18;;;;;;401:17;;216:574;;;;;-1:-1:-1;;;;;216:574:18;;;;575:34;216:574;;;;;;;;;575:34;;;-1:-1:-1;575:34:18;;523:246;740:12;216:574;740:12;;;;;216:574;;;;713:40;;;;;216:574;713:40;;216:574;713:40;;;216:574;;;;713:40;;;;;;;;523:246;;;;713:40;;;;;;;;;;;;;;:::i;:::-;;;216:574;;;;;;;;;;;713:40;;;216:574;;;;;;;;713:40;;;;;;216:574;;;;;;;;;420:21;;216:574;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;216:574:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;216:574:18;;;;;;;;;;;;;-1:-1:-1;;;;;216:574:18;;;;;;;;-1:-1:-1;;;;;216:574:18;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;216:574:18;;;;;;;;1796:162:0;-1:-1:-1;;;;;1710:6:0;216:574:18;;735:10:2;1855:23:0;1851:101;;1796:162::o;1851:101::-;216:574:18;;;1901:40:0;;;735:10:2;1901:40:0;;;216:574:18;1901:40:0",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport {Pool} from \"./pool.sol\";\r\nimport {Data} from \"../libraries/Data.sol\";\r\n\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract TokenPool is Pool {\r\n    constructor() Pool() {}\r\n\r\n    function _withdrawTo(\r\n        address to,\r\n        Data.Token[] memory tokens\r\n    ) internal override {\r\n        for (uint256 index = 0; index < tokens.length; index++) {\r\n            Data.Token memory token = tokens[index];\r\n\r\n            if (token.tokenId == address(0)) {\r\n                payable(to).transfer(token.amount);\r\n            } else {\r\n                IERC20 tokenContract = IERC20(token.tokenId);\r\n                tokenContract.transfer(to, token.amount);\r\n            }\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\DELL\\Documents\\metreon.hack.areon\\smart-contracts\\contracts\\pool\\TokenPool.sol",
  "ast": {
    "absolutePath": "project:/contracts/pool/TokenPool.sol",
    "exportedSymbols": {
      "Data": [
        1314
      ],
      "IERC20": [
        225
      ],
      "Pool": [
        2002
      ],
      "TokenPool": [
        1946
      ]
    },
    "id": 1947,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1863,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:18"
      },
      {
        "absolutePath": "project:/contracts/pool/pool.sol",
        "file": "./pool.sol",
        "id": 1865,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1947,
        "sourceUnit": 2003,
        "src": "61:32:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1864,
              "name": "Pool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2002,
              "src": "69:4:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/libraries/Data.sol",
        "file": "../libraries/Data.sol",
        "id": 1867,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1947,
        "sourceUnit": 1315,
        "src": "95:43:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1866,
              "name": "Data",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1314,
              "src": "103:4:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1869,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1947,
        "sourceUnit": 226,
        "src": "142:70:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1868,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 225,
              "src": "150:6:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1870,
              "name": "Pool",
              "nameLocations": [
                "238:4:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2002,
              "src": "238:4:18"
            },
            "id": 1871,
            "nodeType": "InheritanceSpecifier",
            "src": "238:4:18"
          }
        ],
        "canonicalName": "TokenPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1946,
        "linearizedBaseContracts": [
          1946,
          2002,
          147,
          255,
          1259
        ],
        "name": "TokenPool",
        "nameLocation": "225:9:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1876,
              "nodeType": "Block",
              "src": "271:2:18",
              "statements": []
            },
            "id": 1877,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 1874,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1873,
                  "name": "Pool",
                  "nameLocations": [
                    "264:4:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2002,
                  "src": "264:4:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "264:6:18"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "261:2:18"
            },
            "returnParameters": {
              "id": 1875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "271:0:18"
            },
            "scope": 1946,
            "src": "250:23:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1997
            ],
            "body": {
              "id": 1944,
              "nodeType": "Block",
              "src": "385:402:18",
              "statements": [
                {
                  "body": {
                    "id": 1942,
                    "nodeType": "Block",
                    "src": "452:328:18",
                    "statements": [
                      {
                        "assignments": [
                          1902
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1902,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "485:5:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 1942,
                            "src": "467:23:18",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1283_memory_ptr",
                              "typeString": "struct Data.Token"
                            },
                            "typeName": {
                              "id": 1901,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1900,
                                "name": "Data.Token",
                                "nameLocations": [
                                  "467:4:18",
                                  "472:5:18"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1283,
                                "src": "467:10:18"
                              },
                              "referencedDeclaration": 1283,
                              "src": "467:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1283_storage_ptr",
                                "typeString": "struct Data.Token"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1906,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1903,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1883,
                            "src": "493:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Token_$1283_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Data.Token memory[] memory"
                            }
                          },
                          "id": 1905,
                          "indexExpression": {
                            "id": 1904,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1888,
                            "src": "500:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "493:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$1283_memory_ptr",
                            "typeString": "struct Data.Token memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "467:39:18"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1907,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1902,
                              "src": "527:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1283_memory_ptr",
                                "typeString": "struct Data.Token memory"
                              }
                            },
                            "id": 1908,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "533:7:18",
                            "memberName": "tokenId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1280,
                            "src": "527:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1911,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "552:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "544:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1909,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "544:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "544:10:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "527:27:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1940,
                          "nodeType": "Block",
                          "src": "631:138:18",
                          "statements": [
                            {
                              "assignments": [
                                1926
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1926,
                                  "mutability": "mutable",
                                  "name": "tokenContract",
                                  "nameLocation": "657:13:18",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1940,
                                  "src": "650:20:18",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$225",
                                    "typeString": "contract IERC20"
                                  },
                                  "typeName": {
                                    "id": 1925,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1924,
                                      "name": "IERC20",
                                      "nameLocations": [
                                        "650:6:18"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 225,
                                      "src": "650:6:18"
                                    },
                                    "referencedDeclaration": 225,
                                    "src": "650:6:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$225",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1931,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1928,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1902,
                                      "src": "680:5:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$1283_memory_ptr",
                                        "typeString": "struct Data.Token memory"
                                      }
                                    },
                                    "id": 1929,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "686:7:18",
                                    "memberName": "tokenId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1280,
                                    "src": "680:13:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1927,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 225,
                                  "src": "673:6:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 1930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "673:21:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$225",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "650:44:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1935,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1879,
                                    "src": "736:2:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1936,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1902,
                                      "src": "740:5:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$1283_memory_ptr",
                                        "typeString": "struct Data.Token memory"
                                      }
                                    },
                                    "id": 1937,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "746:6:18",
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1282,
                                    "src": "740:12:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1932,
                                    "name": "tokenContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1926,
                                    "src": "713:13:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$225",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1934,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "727:8:18",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 192,
                                  "src": "713:22:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1938,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "713:40:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1939,
                              "nodeType": "ExpressionStatement",
                              "src": "713:40:18"
                            }
                          ]
                        },
                        "id": 1941,
                        "nodeType": "IfStatement",
                        "src": "523:246:18",
                        "trueBody": {
                          "id": 1923,
                          "nodeType": "Block",
                          "src": "556:69:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1919,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1902,
                                      "src": "596:5:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$1283_memory_ptr",
                                        "typeString": "struct Data.Token memory"
                                      }
                                    },
                                    "id": 1920,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "602:6:18",
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1282,
                                    "src": "596:12:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1916,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1879,
                                        "src": "583:2:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1915,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "575:8:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                        "typeString": "type(address payable)"
                                      },
                                      "typeName": {
                                        "id": 1914,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "575:8:18",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1917,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "575:11:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 1918,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "587:8:18",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "575:20:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "575:34:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1922,
                              "nodeType": "ExpressionStatement",
                              "src": "575:34:18"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1891,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1888,
                      "src": "420:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1892,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1883,
                        "src": "428:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Token_$1283_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Data.Token memory[] memory"
                        }
                      },
                      "id": 1893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "435:6:18",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "428:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "420:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1943,
                  "initializationExpression": {
                    "assignments": [
                      1888
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1888,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "409:5:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 1943,
                        "src": "401:13:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1887,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "401:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1890,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "417:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "401:17:18"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "443:7:18",
                      "subExpression": {
                        "id": 1895,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1888,
                        "src": "443:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1897,
                    "nodeType": "ExpressionStatement",
                    "src": "443:7:18"
                  },
                  "nodeType": "ForStatement",
                  "src": "396:384:18"
                }
              ]
            },
            "id": 1945,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawTo",
            "nameLocation": "290:11:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1885,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "376:8:18"
            },
            "parameters": {
              "id": 1884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1879,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "320:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1945,
                  "src": "312:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1883,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "353:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1945,
                  "src": "333:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Token_$1283_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Data.Token[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1881,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1880,
                        "name": "Data.Token",
                        "nameLocations": [
                          "333:4:18",
                          "338:5:18"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1283,
                        "src": "333:10:18"
                      },
                      "referencedDeclaration": 1283,
                      "src": "333:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$1283_storage_ptr",
                        "typeString": "struct Data.Token"
                      }
                    },
                    "id": 1882,
                    "nodeType": "ArrayTypeName",
                    "src": "333:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$1283_storage_$dyn_storage_ptr",
                      "typeString": "struct Data.Token[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "301:65:18"
            },
            "returnParameters": {
              "id": 1886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "385:0:18"
            },
            "scope": 1946,
            "src": "281:506:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1947,
        "src": "216:574:18",
        "usedErrors": [
          13,
          18,
          2001
        ],
        "usedEvents": [
          24
        ]
      }
    ],
    "src": "33:759:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2024-01-13T09:27:03.524Z",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}